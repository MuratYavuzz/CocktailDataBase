{"version":3,"sources":["redux/actions/ingredientListActions.js","redux/actions/actionTypes.js","redux/actions/drinksByIngredient.js","components/navi/Ingredients.js","components/navi/Navi.js","redux/actions/categoryActions.js","redux/actions/drinksActions.js","components/categories/CategoryList.js","redux/actions/drinkDetail.js","components/products/DrinksList.js","components/root/Dashboard.js","components/products/DrinkDetail.js","components/products/DrinksByIngredient.js","redux/actions/randomCocktail.js","components/products/RandomDrink.js","redux/actions/nonAlcoholicCocktails.js","components/products/NonAlcoholicDrinks.js","components/root/App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/index.js","redux/reducers/changeCategoryReducer.js","redux/reducers/categoryListRecuder.js","redux/reducers/drinksListReducer.js","redux/reducers/drinkDetailReducer.js","redux/reducers/ingredientsReducer.js","redux/reducers/drinksByIngredientReducer.js","redux/reducers/randomCocktailReducer.js","redux/reducers/nonAlcoholicReducer.js","index.js","redux/reducers/configureStore.js"],"names":["getIngredientsList","dispatch","fetch","method","headers","then","response","json","result","type","payload","drinks","getDrinksByIngredient","ingredientName","Ingredients","selectIngredient","ingredient","props","actions","strIngredient1","alertify","success","this","getIngredients","ingredients","length","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","map","to","style","textDecoration","DropdownItem","onClick","Component","connect","state","ingredientsReducer","bindActionCreators","ingredientListActions","drinksByIngredient","Navi","useState","isOpen","setIsOpen","Navbar","className","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","NavbarText","changeCategory","category","getCategories","getDrinksSuccess","getDrinks","categoryName","CategoryList","selectCategory","strCategory","ListGroup","ListGroupItem","categories","active","currentCategory","changeCategoryReducer","categoryListReducer","categoryActions","drinksAction","getDrinkDetail","drinkId","DrinksList","selectDrink","drink","getDrink","idDrink","images","key","color","Card","width","padding","CardImg","variant","src","strDrinkThumb","CardBody","CardTitle","strDrink","drinksListReducer","drinksActions","drinkDetail","Dashboard","Row","Col","xs","DrinkDetail","height","viewBox","class","fill","xmlns","fill-rule","d","body","outline","md","top","alt","CardSubtitle","CardText","renderIcon","strInstructions","strAlcoholic","strIngredient2","strIngredient3","drinkDetailReducer","DrinksByIngredient","drinksByIngredientReducer","getRandomCocktail","RandomDrink","randomCocktailReducer","randomCocktail","getDrinksNonAlcoholic","console","log","NonAlcoholicDrinks","getNonAlcoholicDrinks","nonAlcoholicReducer","nonAlcoholicCocktails","App","basename","Container","fluid","path","exact","component","Boolean","window","location","hostname","match","nonAlcoholic","rootReducer","combineReducers","initialState","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c2846506.chunk.js","sourcesContent":["import * as actionTypes from \"./actionTypes\";\r\n\r\nexport function getIngredient(ingredients) {\r\n  return { type: actionTypes.GET_INGREDIENTS_SUCCESS, payload: ingredients };\r\n}\r\nexport function getIngredientsList() {\r\n  return function (dispatch) {\r\n    fetch(\"https://the-cocktail-db.p.rapidapi.com/list.php?i=list\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"253d9de424mshcce2e29a6e54991p11f660jsn9852ee16d394\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => dispatch(getIngredient(result.drinks)))\r\n\r\n  };\r\n}\r\n","export const CHANGE_CATEGORY=\"CHANGE_CATEGORY\"\r\nexport const GET_CATEGORIES_SUCCESS=\"GET_CATEGORIES_SUCCESS\"\r\nexport const GET_DRINKS_SUCCESS=\"GET_DRINKS_SUCCESS\"\r\nexport const GET_DRINK_SUCCESS=\"GET_DRINK_SUCCESS\"\r\nexport const DRINK_DETAIL=\"DRINK_DETAIL\"\r\nexport const GET_INGREDIENTS_SUCCESS=\"GET_INGREDIENTS_SUCCESS\"\r\nexport const DRINKS_BY_INGREDIENTS=\"DRINKS_BY_INGREDIENTS\"\r\nexport const RANDOM_COCKTAIL=\"RANDOM_COCKTAIL\"\r\nexport const NON_ALCOHOLIC_COCKTAILS=\"NON_ALCOHOLIC_COCKTAILS\"","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport function getDrinksByIngredientSuccess(drinks_by_ingredient) {\r\n  return {\r\n    type: actionTypes.DRINKS_BY_INGREDIENTS,\r\n    payload: drinks_by_ingredient\r\n  };\r\n}\r\nexport function getDrinksByIngredient(ingredientName) {\r\n  return function (dispatch) {\r\n    fetch(\"https://the-cocktail-db.p.rapidapi.com/filter.php?i=\"+ ingredientName, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"253d9de424mshcce2e29a6e54991p11f660jsn9852ee16d394\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => dispatch(getDrinksByIngredientSuccess(result.drinks)))\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ingredientListActions from \"../../redux/actions/ingredientListActions\";\r\nimport * as drinksByIngredient from \"../../redux/actions/drinksByIngredient\";\r\nimport alertify from \"alertifyjs\"\r\n\r\nclass Ingredients extends Component {\r\n  componentDidMount() {\r\n    this.props.actions.getIngredients();\r\n  }\r\n  selectIngredient = (ingredient) => {\r\n    this.props.actions.getDrinksByIngredient(ingredient.strIngredient1);\r\n    alertify.success( \"Displaying \" + ingredient.strIngredient1 +\" Based Cocktails\");\r\n  }\r\n  render() {\r\n    var newSize = 5;\r\n    this.props.ingredients.length = newSize;\r\n    return (\r\n      <UncontrolledDropdown nav inNavbar>\r\n        <DropdownToggle nav caret>\r\n          Ingredients\r\n        </DropdownToggle>\r\n        <DropdownMenu right>\r\n          {this.props.ingredients.map((ingredient) => (\r\n            <Link to={\"/DrinksByIngredient\"} style={{ textDecoration: 'none'}} >\r\n              <DropdownItem onClick={() => this.selectIngredient(ingredient)} >{ingredient.strIngredient1}</DropdownItem>\r\n            </Link>\r\n          ))}\r\n        </DropdownMenu>\r\n      </UncontrolledDropdown>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ingredients: state.ingredientsReducer,\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getIngredients: bindActionCreators(\r\n        ingredientListActions.getIngredientsList,\r\n        dispatch\r\n      ),\r\n      getDrinksByIngredient: bindActionCreators(drinksByIngredient.getDrinksByIngredient, dispatch),\r\n    },\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Ingredients);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Ingredients from \"../navi/Ingredients\";\r\n\r\nconst Navi = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar className=\"navbar navbar-dark bg-dark mb-1\" light expand=\"md\">\r\n        <Link to=\"/\">\r\n          <NavbarBrand>\r\n            <h3>Cocktails Store</h3>\r\n          </NavbarBrand>\r\n        </Link>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <Link to={\"/RandomCocktail\"}>\r\n                <NavLink>Random Cocktail</NavLink>\r\n              </Link>\r\n            </NavItem>\r\n            <NavItem>\r\n              <Link to={\"/CocktailDatabase\"}>\r\n                <NavLink>Most Latest Cocktails</NavLink>\r\n              </Link>\r\n            </NavItem>\r\n            <Ingredients></Ingredients>\r\n          </Nav>\r\n          <NavbarText>©Cocktail DB</NavbarText>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navi;\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport function changeCategory(category) {\r\n  return { type: actionTypes.CHANGE_CATEGORY, payload: category };\r\n}\r\n\r\nexport function getCategoriesSuccess(categories) {\r\n  return { type: actionTypes.GET_CATEGORIES_SUCCESS, payload: categories };\r\n}\r\n\r\nexport function getCategories() {\r\n  return function (dispatch) {\r\n    fetch(\"https://the-cocktail-db.p.rapidapi.com/list.php?c=list\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"253d9de424mshcce2e29a6e54991p11f660jsn9852ee16d394\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => dispatch(getCategoriesSuccess(result.drinks)));\r\n  };\r\n}\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport function getDrinksSuccess(drinks) {\r\n  return { type: actionTypes.GET_DRINKS_SUCCESS, payload: drinks };\r\n}\r\n\r\nexport function getDrinks(categoryName) {\r\n  return function (dispatch) {\r\n    if (categoryName) {\r\n      fetch(\r\n        \"https://the-cocktail-db.p.rapidapi.com/filter.php?c=\" + categoryName,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n            \"x-rapidapi-key\":\r\n              \"253d9de424mshcce2e29a6e54991p11f660jsn9852ee16d394\",\r\n          },\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((result) => dispatch(getDrinksSuccess(result.drinks)));\r\n    } else {\r\n      fetch(\"https://the-cocktail-db.p.rapidapi.com/popular.php\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n          \"x-rapidapi-key\":\r\n            \"253d9de424mshcce2e29a6e54991p11f660jsn9852ee16d394\",\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((result) => dispatch(getDrinksSuccess(result.drinks)));\r\n    }\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as categoryActions from \"../../redux/actions/categoryActions\";\r\nimport * as drinksAction from \"../../redux/actions/drinksActions\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nclass CategoryList extends Component {\r\n  componentDidMount() {\r\n    this.props.actions.getCategories();\r\n  }\r\n\r\n  selectCategory = (category) => {\r\n    this.props.actions.changeCategory(category);\r\n    this.props.actions.getDrinks(category.strCategory);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ListGroup>\r\n          <ListGroupItem className=\"p-3 mb-1 bg-danger text-white text-center\">\r\n            <h4>Cocktail Categories</h4>\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n\r\n        <ListGroup >\r\n          {this.props.categories.map((category) => (\r\n            <ListGroupItem \r\n            active={category.strCategory === this.props.currentCategory.strCategory}\r\n            onClick={() => this.selectCategory(category)}\r\n            >\r\n              {category.strCategory}\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentCategory: state.changeCategoryReducer,\r\n    categories: state.categoryListReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getCategories: bindActionCreators(\r\n        categoryActions.getCategories,\r\n        dispatch\r\n      ),\r\n        changeCategory: bindActionCreators(\r\n        categoryActions.changeCategory,\r\n        dispatch\r\n      ),\r\n      getDrinks: bindActionCreators(drinksAction.getDrinks, dispatch), \r\n    },\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryList);\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport function getDrinkSuccess(drink) {\r\n    return { type: actionTypes.GET_DRINK_SUCCESS, payload: drink };\r\n  }\r\nexport function getDrinkDetail(drinkId) {\r\n  return function (dispatch) {\r\n    fetch(\"https://the-cocktail-db.p.rapidapi.com/lookup.php?i=\" + drinkId, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"253d9de424mshcce2e29a6e54991p11f660jsn9852ee16d394\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => dispatch(getDrinkSuccess(result.drinks)))\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, CardImg, CardBody, CardTitle } from \"reactstrap\";\r\nimport * as drinksActions from \"../../redux/actions/drinksActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as drinkDetail from \"../../redux/actions/drinkDetail\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nclass DrinksList extends Component {\r\n  componentDidMount() {\r\n    this.props.actions.getDrinks();\r\n  }\r\n  selectDrink = (drink) => {\r\n    this.props.actions.getDrink(drink.idDrink);\r\n  };\r\n  render() {\r\n    var newSize = 9;\r\n    this.props.drinks.length = newSize;\r\n    const images = this.props.drinks.map((drink) => {\r\n      return (\r\n        <Link key={drink.idDrink} to={\"/DrinkDetail\"} style={{ textDecoration: 'none',color:'GrayText'}}>\r\n        <Card onClick={() => this.selectDrink(drink)} key={drink.idDrink} style={{ width: \"20.79rem\", padding:3 }}>\r\n          <CardImg variant=\"top\" src={drink.strDrinkThumb} />\r\n          <CardBody>\r\n            <CardTitle className=\"text-center\"><h4>{drink.strDrink}</h4></CardTitle>\r\n          </CardBody>\r\n        </Card>\r\n        </Link>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"container\">\r\n        <footer className=\"row \">\r\n          <div className=\"row\"></div>\r\n          <div className=\"row\">{images}</div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    //currentCategory: state.changeCategoryReducer,\r\n    drinks: state.drinksListReducer,\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getDrinks: bindActionCreators(drinksActions.getDrinks, dispatch),\r\n      getDrink: bindActionCreators(drinkDetail.getDrinkDetail, dispatch),\r\n    },\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrinksList);\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport CategoryList from \"../categories/CategoryList\"\r\nimport DrinksList from \"../products/DrinksList\";\r\n\r\n\r\nexport default class Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col xs=\"3\">\r\n              <CategoryList/>\r\n          </Col>\r\n          <Col xs=\"9\">\r\n              <DrinksList/>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as drinkDetail from \"../../redux/actions/drinkDetail\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nclass DrinkDetail extends Component {\r\n  componentDidMount() {\r\n    this.props.actions.getDrink();\r\n  }\r\n  renderIcon() {\r\n    return (\r\n      <svg\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n        viewBox=\"0 0 16 16\"\r\n        class=\"bi bi-caret-right\"\r\n        fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          fill-rule=\"evenodd\"\r\n          d=\"M6 12.796L11.481 8 6 3.204v9.592zm.659.753l5.48-4.796a1 1 0 0 0 0-1.506L6.66 2.451C6.011 1.885 5 2.345 5 3.204v9.592a1 1 0 0 0 1.659.753z\"\r\n        />\r\n      </svg>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.drink.map((drink) => (\r\n          <Row>\r\n            <Col>\r\n              <Card body outline color=\"secondary\">\r\n                <Row className=\"no-gutters\">\r\n                  <Col md=\"4\">\r\n                    <CardImg\r\n                      top\r\n                      width=\"100%\"\r\n                      src={drink.strDrinkThumb}\r\n                      alt=\"Card image cap\"\r\n                    />\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    <CardBody className=\"mt-5\">\r\n                      <CardTitle className=\" h2 mb-2 font-weight-bold\">\r\n                        {drink.strDrink}\r\n                      </CardTitle>\r\n                      <CardSubtitle></CardSubtitle>\r\n                      <CardText>\r\n                        <b>Description</b> <br></br>\r\n                        {this.renderIcon()}\r\n                        {drink.strInstructions}\r\n                      </CardText>\r\n                      <CardText>\r\n                        <b>Alcoholic</b> <br></br>\r\n                        {this.renderIcon()}\r\n                        {drink.strAlcoholic}\r\n                      </CardText>\r\n                      <CardText>\r\n                        <b>Category</b> <br></br>\r\n                        {this.renderIcon()}\r\n                        {drink.strCategory}\r\n                      </CardText>\r\n                      <CardText>\r\n                        <b>Ingredients</b> <br></br>\r\n                        <ul>\r\n                          <li>{drink.strIngredient1}</li>\r\n                          <li>{drink.strIngredient2}</li>\r\n                          <li>{drink.strIngredient3}</li>\r\n                        </ul>\r\n                      </CardText>\r\n                    </CardBody>\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    drink: state.drinkDetailReducer,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getDrink: bindActionCreators(drinkDetail.getDrinkDetail, dispatch),\r\n    },\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrinkDetail);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, CardImg, CardBody, CardTitle } from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as drinkDetail from \"../../redux/actions/drinkDetail\";\r\n\r\nclass DrinksByIngredient extends Component {\r\n  selectDrink = (drink) => {\r\n    this.props.actions.getDrink(drink.idDrink);\r\n  };\r\n  render() {\r\n    //var newSize = 12;\r\n    //this.props.drinks.length = newSize;\r\n    const images = this.props.drinks.map((drink) => {\r\n      return (\r\n        <Link to={\"/DrinkDetail\"} style={{ textDecoration: \"none\",color:\"GrayText\" }}>\r\n          <Card\r\n            onClick={() => this.selectDrink(drink)}\r\n            style={{ width: \"24rem\", padding: 3 }}\r\n          >\r\n            <CardImg variant=\"top\" src={drink.strDrinkThumb} />\r\n            <CardBody>\r\n              <CardTitle className=\"text-center\">\r\n                <h4>{drink.strDrink}</h4>\r\n              </CardTitle>\r\n            </CardBody>\r\n          </Card>\r\n        </Link>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"container\">\r\n        <footer className=\"row \">\r\n          <div className=\"row\"></div>\r\n          <div className=\"row\">{images}</div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    drinks: state.drinksByIngredientReducer,\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getDrink: bindActionCreators(drinkDetail.getDrinkDetail, dispatch),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(DrinksByIngredient);\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport function RandomCocktail(drink) {\r\n  return { type: actionTypes.RANDOM_COCKTAIL, payload: drink };\r\n}\r\nexport function getRandomCocktail() {\r\n  return function (dispatch) {\r\n    fetch(\"https://the-cocktail-db.p.rapidapi.com/random.php\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"253d9de424mshcce2e29a6e54991p11f660jsn9852ee16d394\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => dispatch(RandomCocktail(result.drinks)));\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as randomCocktail from \"../../redux/actions/randomCocktail\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Row,\r\n  Col,\r\n} from \"reactstrap\";\r\n\r\nclass RandomDrink extends Component {\r\n  componentDidMount() {\r\n    this.props.actions.getDrink();\r\n  }\r\n  renderIcon() {\r\n    return (\r\n      <svg\r\n        width=\"1em\"\r\n        height=\"1em\"\r\n        viewBox=\"0 0 16 16\"\r\n        class=\"bi bi-caret-right\"\r\n        fill=\"currentColor\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          fill-rule=\"evenodd\"\r\n          d=\"M6 12.796L11.481 8 6 3.204v9.592zm.659.753l5.48-4.796a1 1 0 0 0 0-1.506L6.66 2.451C6.011 1.885 5 2.345 5 3.204v9.592a1 1 0 0 0 1.659.753z\"\r\n        />\r\n      </svg>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"text-center\">Today's Random Cocktail</h1>\r\n        {this.props.drink.map((drink) => (\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Row className=\"no-gutters\">\r\n                  <Col md=\"4\">\r\n                    <CardImg\r\n                      top\r\n                      width=\"100%\"\r\n                      src={drink.strDrinkThumb}\r\n                      alt=\"Card image cap\"\r\n                    />\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    <CardBody className=\"mt-5\">\r\n                      <CardTitle className=\" h2 mb-2 font-weight-bold\">\r\n                        {drink.strDrink}\r\n                      </CardTitle>\r\n                      <CardSubtitle></CardSubtitle>\r\n                      <CardText>\r\n                        <b>Description</b> <br></br>\r\n                        {this.renderIcon()}\r\n                        {drink.strInstructions}\r\n                      </CardText>\r\n                      <CardText>\r\n                        <b>Alcoholic</b> <br></br>\r\n                        {this.renderIcon()}\r\n                        {drink.strAlcoholic}\r\n                      </CardText>\r\n                      <CardText>\r\n                        <b>Category</b> <br></br>\r\n                        {this.renderIcon()}\r\n                        {drink.strCategory}\r\n                      </CardText>\r\n                      <CardText>\r\n                        <b>Ingredients</b> <br></br>\r\n                        <ul>\r\n                          <li>{drink.strIngredient1}</li>\r\n                          <li>{drink.strIngredient2}</li>\r\n                          <li>{drink.strIngredient3}</li>\r\n                        </ul>\r\n                      </CardText>\r\n                    </CardBody>\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    drink: state.randomCocktailReducer\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getDrink: bindActionCreators(randomCocktail.getRandomCocktail, dispatch),\r\n    },\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomDrink);\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport function getNonAlcoholicCocktailsSuccess(drinks_non_alcoholic) {\r\n  return {\r\n    type: actionTypes.NON_ALCOHOLIC_COCKTAILS,\r\n    payload: drinks_non_alcoholic,\r\n  };\r\n}\r\nexport function getDrinksNonAlcoholic() {\r\n  return function (dispatch) {\r\n    fetch(\"https://the-cocktail-db.p.rapidapi.com/latest.php\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"the-cocktail-db.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"253d9de424mshcce2e29a6e54991p11f660jsn9852ee16d394\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) =>\r\n        dispatch(getNonAlcoholicCocktailsSuccess(result.drinks))\r\n      )\r\n      .then((result) => console.log(result));\r\n    debugger;\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, CardImg, CardBody, CardTitle } from \"reactstrap\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport * as drinkDetail from \"../../redux/actions/drinkDetail\";\r\nimport * as nonAlcoholicCocktails from \"../../redux/actions/nonAlcoholicCocktails\";\r\n\r\nclass NonAlcoholicDrinks extends Component {\r\n  componentDidMount() {\r\n    this.props.actions.getNonAlcoholicDrinks();\r\n  }\r\n  selectDrink = (drink) => {\r\n    this.props.actions.getDrink(drink.idDrink);\r\n  };\r\n  render() {\r\n    //var newSize = 9;\r\n    //this.props.drinks.length = newSize;\r\n    const images = this.props.drinks.map((drink) => {\r\n      return (\r\n        <Link to={\"/DrinkDetail\"} style={{ textDecoration: \"none\",color:'GrayText' }}>\r\n          <Card\r\n            onClick={() => this.selectDrink(drink)}\r\n            style={{ width: \"24rem\", padding: 3 }}\r\n          >\r\n            <CardImg variant=\"top\" src={drink.strDrinkThumb} />\r\n            <CardBody>\r\n              <CardTitle className=\"text-center\">\r\n                <h4>{drink.strDrink}</h4>\r\n              </CardTitle>\r\n            </CardBody>\r\n          </Card>\r\n        </Link>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"text-center\">Most Latest Cocktails</h1>\r\n        <footer className=\"row \">\r\n          <div className=\"row\"></div>\r\n          <div className=\"row\">{images}</div>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    drinks: state.nonAlcoholicReducer,\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    actions: {\r\n      getDrink: bindActionCreators(drinkDetail.getDrinkDetail, dispatch),\r\n      getNonAlcoholicDrinks: bindActionCreators(\r\n        nonAlcoholicCocktails.getDrinksNonAlcoholic,\r\n        dispatch\r\n      ),\r\n    },\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NonAlcoholicDrinks);\r\n","import React from \"react\";\nimport { Container } from \"reactstrap\";\nimport Navi from \"../navi/Navi\";\nimport Dashboard from \"./Dashboard\";\nimport { Route, Switch, HashRouter } from \"react-router-dom\";\nimport DrinkDetail from \"../products/DrinkDetail\";\nimport DrinksByIngredient from \"../products/DrinksByIngredient\";\nimport RandomDrink from \"../products/RandomDrink\";\nimport NonAlcoholicDrinks from \"../products/NonAlcoholicDrinks\";\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <Container fluid={true}>\n        <Navi />\n        <Switch>\n          <Route path=\"/\" exact component={Dashboard} />\n          <Route path=\"/DrinkDetail\" exact component={DrinkDetail} />\n          <Route\n            path=\"/DrinksByIngredient\"\n            exact\n            component={DrinksByIngredient}\n          />\n          <Route path=\"/RandomCocktail/\" exact component={RandomDrink} />\n          <Route path=\"/MostLatest\" exact component={NonAlcoholicDrinks} />\n        </Switch>\n      </Container>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\r\n  currentCategory: {},\r\n  categories: [],\r\n  drinks: [],\r\n  drink: [],\r\n  ingredients: [],\r\n  drinksByIngredient: [],\r\n  randomCocktail: [],\r\n  nonAlcoholic:[]\r\n};\r\n","import {combineReducers} from \"redux\"\r\nimport changeCategoryReducer from \"./changeCategoryReducer\"\r\nimport categoryListReducer from \"./categoryListRecuder\"\r\nimport drinksListReducer from \"./drinksListReducer\"\r\nimport drinkDetailReducer from \"./drinkDetailReducer\"\r\nimport ingredientsReducer from \"./ingredientsReducer\"\r\nimport drinksByIngredientReducer from \"./drinksByIngredientReducer\"\r\nimport randomCocktailReducer from \"./randomCocktailReducer\"\r\nimport nonAlcoholicReducer from \"./nonAlcoholicReducer\"\r\nconst rootReducer = combineReducers({\r\n    changeCategoryReducer,\r\n    categoryListReducer,\r\n    drinksListReducer,\r\n    drinkDetailReducer,\r\n    ingredientsReducer,\r\n    drinksByIngredientReducer,\r\n    randomCocktailReducer,\r\n    nonAlcoholicReducer\r\n})\r\n\r\nexport default rootReducer;","import * as actionTypes from \"../actions/actionTypes\"\r\nimport initialState from \"./initialState\"\r\n\r\nexport default function changeCategoryReducer(state=initialState.currentCategory,action)\r\n{\r\n    switch (action.type) {\r\n        case actionTypes.CHANGE_CATEGORY:\r\n            return action.payload\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from \"../actions/actionTypes\"\r\nimport initialState from \"./initialState\"\r\n\r\nexport default function changeCategoryReducer(state=initialState.categories,action)\r\n{\r\n    switch (action.type) {\r\n        case actionTypes.GET_CATEGORIES_SUCCESS:\r\n            return action.payload\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from \"../actions/actionTypes\"\r\nimport initialState from \"./initialState\"\r\n\r\nexport default function drinksListReducer(state=initialState.drinks,action)\r\n{\r\n    switch (action.type) {\r\n        case actionTypes.GET_DRINKS_SUCCESS:\r\n            return action.payload\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from \"../actions/actionTypes\"\r\nimport initialState from \"./initialState\"\r\n\r\nexport default function drinkDetailReducer(state=initialState.drink,action)\r\n{\r\n    switch (action.type) {\r\n        case actionTypes.GET_DRINK_SUCCESS:\r\n            return action.payload\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from \"../actions/actionTypes\"\r\nimport initialState from \"./initialState\"\r\n\r\nexport default function ingredientsReducer(state=initialState.ingredients,action)\r\n{\r\n    switch (action.type) {\r\n        case actionTypes.GET_INGREDIENTS_SUCCESS:\r\n            return action.payload\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from \"../actions/actionTypes\"\r\nimport initialState from \"./initialState\"\r\n\r\nexport default function drinksByIngredientReducer(state=initialState.drinksByIngredient,action)\r\n{\r\n    switch (action.type) {\r\n        case actionTypes.DRINKS_BY_INGREDIENTS:\r\n            return action.payload\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from \"../actions/actionTypes\"\r\nimport initialState from \"./initialState\"\r\n\r\nexport default function randomCocktailReducer(state=initialState.randomCocktail,action)\r\n{\r\n    switch (action.type) {\r\n        case actionTypes.RANDOM_COCKTAIL:\r\n            return action.payload\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as actionTypes from \"../actions/actionTypes\"\r\nimport initialState from \"./initialState\"\r\n\r\nexport default function nonAlcoholicReducer(state=initialState.nonAlcoholic,action)\r\n{\r\n    switch (action.type) {\r\n        case actionTypes.NON_ALCOHOLIC_COCKTAILS:\r\n            return action.payload\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/root/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from \"react-redux\";\nimport configureStore from\"./redux/reducers/configureStore\"\nimport {BrowserRouter} from \"react-router-dom\"\nimport 'alertifyjs/build/css/alertify.css';\nconst store= configureStore();\nReactDOM.render(\n  <BrowserRouter>\n  <Provider store={store}>\n    <App />\n  </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore,applyMiddleware} from \"redux\"\r\nimport rootReducer from \"./index\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nexport default function configureStore(){\r\n    return createStore(rootReducer,applyMiddleware(thunk))\r\n}"],"sourceRoot":""}